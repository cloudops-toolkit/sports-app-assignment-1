name: API CI/CD Pipeline

on:
  push:
    branches: 
      - develop   # staging
      - main     # production
    paths:
      - 'sports-platform/api/**'
      - '.github/workflows/api-pipeline.yml'
      - '.github/workflows/deployment.yml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
  API_PATH: sports-platform/api/SportsApi

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: Run Tests
        run: |
          cd $API_PATH
          dotnet test --collect:"XPlat Code Coverage"

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/deploy-api.yml
    with:
      environment: staging
      deploy-type: api
      service-name: sports-api
      cluster-name: sports-platform-staging
      task-definition: sports-platform-api
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}

  deploy-production:
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy-api.yml
    with:
      environment: production
      deploy-type: api
      service-name: sports-api
      cluster-name: sports-platform-production
      task-definition: sports-platform-api
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
